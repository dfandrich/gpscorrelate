# Cirrus CI configuration
# https://cirrus-ci.com/github/dfandrich/gpscorrelate

freebsd_task:
  name: FreeBSD
  skip: "changesIncludeOnly(
    '.appveyor.yml',
    '.github/**'
    )"
  freebsd_instance:
    memory: 950M
    cpu: 1
    matrix:
      image_family: freebsd-14-3
      image_family: freebsd-13-5

  env:
    # Set to 10 instead of 1 to avoid problems when new commits are submitted
    # during a run.
    CIRRUS_CLONE_DEPTH: 10
    CFLAGS: -Wall -Wextra -Werror -Wno-error=deprecated-declarations -O3 -DENABLE_NLS=1
    LDFLAGS: $CFLAGS -lintl
    CC: cc
    CXX: c++
    MAKEFLAGS: -j 3
    matrix:
      - GTK: 2
      - GTK: 3

  pkginstall_script:
    # pkg install sometimes gets package size mismatches without this
    - pkg update -f
    - pkg install -y pkgconf docbook-xsl exiv2 libxml2 gtk"$GTK" libxslt gettext-tools desktop-file-utils

  compile_script:
    - make CC="$CC" CXX="$CXX" CFLAGS="$CFLAGS" LDFLAGS="$LDFLAGS" GTK="$GTK"

  test_script:
    - ./gpscorrelate -V
    # The tests involving writing to read-only files fail when run as root
    # (because the OS allows the files to be overwritten then). Run the
    # tests as a normal user to get around that problem. The log directory
    # must be world-writable since files will be written there.
    - install -d -m 0777 tests/log
    - sudo -u nobody make check CHECK_OPTIONS=-v

  install_script:
    - make prefix= DESTDIR="${HOME}" install install-po install-desktop-file

linux_arm_task:
  name: ARM Linux
  skip: "changesIncludeOnly(
    '.appveyor.yml',
    '.github/**'
    )"
  arm_container:
    image: ubuntu:24.04
    memory: 350M
    cpu: 1

  env:
    # Set to 10 instead of 1 to avoid problems when new commits are submitted
    # during a run.
    CIRRUS_CLONE_DEPTH: 10
    DEBIAN_FRONTEND: noninteractive
    CFLAGS: -Wall -Wextra -Werror -Wno-error=deprecated-declarations -O3 -DENABLE_NLS=1
    LDFLAGS: $CFLAGS
    CC: cc
    CXX: c++
    MAKE_FLAGS: -j 2
    matrix:
      - GTK: 2
      - GTK: 3

  pkginstall_script:
    - uname -a
    - apt-get update -y && apt-get install -y --no-install-suggests --no-install-recommends build-essential desktop-file-utils docbook-xsl exiv2 libexiv2-dev libgtk${GTK/3/-}${GTK/2/.0}-dev xsltproc libxml2-dev gettext
    # Create a user for running tests
    - useradd -p '' build

  compile_script:
    - make CC="$CC" CXX="$CXX" CFLAGS="$CFLAGS" LDFLAGS="$LDFLAGS" GTK="$GTK"

  test_script:
    - ./gpscorrelate -V
    # The tests involving writing to read-only files fail when run as root
    # (because the OS allows the files to be overwritten then). Run the
    # tests as a normal user to get around that problem. The log directory
    # must be world-writable since files will be written there.
    - install -d -m 0777 tests/log
    - chmod a-w tests/staging/*
    - su build -c 'make check CHECK_OPTIONS=-v'

  install_script:
    - make prefix= DESTDIR="${HOME}" install install-po install-desktop-file

linux_musl_task:
  name: Linux MUSL
  skip: "changesIncludeOnly(
    '.appveyor.yml',
    '.github/**'
    )"
  container:
    memory: 320M
    cpu: 1
    matrix:
      - image: alpine:3.22
      - image: alpine:3.19

  env:
    # Set to 10 instead of 1 to avoid problems when new commits are submitted
    # during a run.
    CIRRUS_CLONE_DEPTH: 10
    CFLAGS: -Wall -Wextra -Werror -Wno-error=deprecated-declarations -O3 -DENABLE_NLS=1
    LDFLAGS: $CFLAGS -lintl
    CC: cc
    CXX: c++
    MAKE_FLAGS: -j 2
    matrix:
      - GTK: 2
      - GTK: 3

  pkginstall_script:
    - uname -a
    - apk add --no-cache build-base exiv2-dev libxml2-dev gettext-dev "gtk+${GTK}.0-dev" desktop-file-utils
    # Create a user for running tests
    - adduser -D build

  compile_script:
    - make CC="$CC" CXX="$CXX" CFLAGS="$CFLAGS" LDFLAGS="$LDFLAGS" GTK="$GTK"

  test_script:
    - ./gpscorrelate -V
    # The tests involving writing to read-only files fail when run as root
    # (because the OS allows the files to be overwritten then). Run the
    # tests as a normal user to get around that problem. The log directory
    # must be world-writable since files will be written there.
    - install -d -m 0777 tests/log
    - su build -c 'make check CHECK_OPTIONS=-v'

  install_script:
    - make prefix= DESTDIR="${HOME}" install install-po install-desktop-file
